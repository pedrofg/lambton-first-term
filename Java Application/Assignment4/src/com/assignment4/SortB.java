package com.assignment4;

import java.util.concurrent.ThreadLocalRandom;

//SortB class inherits form SortA to invoke the methods to sort the array and 
//the class implements the interface MyApiB which declare the methods to the array be instantiated which random values.
public class SortB extends SortA implements MyApiB {

	// Overrides sortAscending from MyApiB receiving the size of the array.
	// Creating the new array with the size received.
	// Calling the SortA method to sort the array in ascending order.
	// Printing the array in the console.
	@Override
	public void sortAcending(int numOfElms) {
		double[] doubleArray = newArray(numOfElms);
		sortAcending(doubleArray);
		printArray(doubleArray);
	}

	// Overrides sortDescending from MyApiB receiving the size of the array.
	// Creating the new array with the size received.
	// Calling the SortA method to sort the array in descending order.
	// Printing the array in the console.
	@Override
	public void sortDescending(int numOfElms) {
		double[] doubleArray = newArray(numOfElms);
		sortDescending(doubleArray);
		printArray(doubleArray);
	}

	// Instantiate the array with the size received and loop through it filling
	// it with random values generated by random() method.
	private double[] newArray(int numOfElms) {
		double[] doubleArray = new double[numOfElms];
		for (int i = 0; i < numOfElms; i++) {
			doubleArray[i] = random();
		}
		return doubleArray;
	}

	// Generate a random double value to be filled in the array.
	// This method is assuming values between 1 and 20.
	// Round the value to be up to 2 decimals.
	// Return the value to the calling method.
	private double random() {
		double number = ThreadLocalRandom.current().nextDouble(1, 20);
		number = Math.round(number * 100);
		number = number / 100;
		return number;
	}

	// Loop through the received array and print it on the console screen.
	public void printArray(double[] array) {
		for (double d : array) {
			System.out.println(d);
		}
	}

}
